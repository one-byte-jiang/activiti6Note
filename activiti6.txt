====activiti====
事件的监听：1.eventListeners,对所有事件类型的监听
2.typedEventListeners,是对某一个指定类型的监听 比如流程开始、结束等

#集成Spring配置
添加pom依赖
	    <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-engine</artifactId>
            <version>6.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring</artifactId>
            <version>6.0.0</version>
        </dependency>
基于Spring的默认配置activiti-context.xml 而不是activiti.cfg.xml
activiti-context.xml内容如下：

<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="jdbc:mysql://localhost:3306/activiti6" />
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="username" value="root" />
    <property name="password" value="123456" />
    <property name="initialSize" value="1" />
    <property name="maxActive" value="10" />
    <property name="filters" value="stat,slf4j" />
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
  <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
    <property name="dataSource" ref="dataSource" />
    <property name="transactionManager" ref="transactionManager" />
	<property name="databaseSchemaUpdate" value="true" />
  </bean>
  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    <!--创建流程引擎对象-->
    <property name="processEngineConfiguration" ref="processEngineConfiguration" />
  </bean>
  <!--暴露服务-->
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"></bean>
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"></bean>
  <bean id="formService" factory-bean="processEngine" factory-method="getFormService"></bean>
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"></bean>
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"></bean>
  <!--用于测试流程的对象-->
  <bean id="activitiRule" class="org.activiti.engine.test.ActivitiRule">
    <property name="processEngine" ref="processEngine"/>
  </bean>



==TaskService设置Task权限信息==
candidateUser:候选用户
candidateGroup:候选组

ToStringBuilder.reflectionToString(obj,ToStringStyle.JSON_STYLE);对象已json格式toString

==IdentityService身份管理服务==
保存用户原理、判断版本号。版本号为0视为新增、其余修改。然后放入记录到缓存。等到flush刷新的时候，再按照insert、update、delete的顺序更新到数据库里面

==FormService==
